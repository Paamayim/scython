#!/usr/local/bin/scython

pragma:
    options:
        "drop"
        "install"
        "help"

if "help" in options:
    print "help message here"
    exit()


import sqlite3
import matplotlib.pyplot as plt

conn = sqlite3.connect("%s.pcfb.db" % homedir)
c = conn.cursor()

# -----------------------------------------------------------

if "install" in options:
    if "drop" in options:
        c.execute("DROP TABLE stretch")
        c.execute("DROP TABLE waking")
    
    c.execute("""
    CREATE TABLE stretch (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        start DATETIME NOT NULL,
        end DATETIME
    )
    """)
    
    c.execute("""
    CREATE TABLE waking (
        day DATE PRIMARY KEY,
        hello TIME
    )
    """)
    
    conn.commit()
    
    print "done"
    exit()

# -----------------------------------------------------------

def check_none(sql):
    c.execute(sql)
    return c.fetchone() == None

# ----------------------------------------------------------

def show():
    secondsPerHour = 3600.0
    now = int(`date +%s`)

    c.execute("SELECT strftime('%s', hello), strftime('%s', day) FROM waking WHERE day == date('now')")
    result = c.fetchone()
    
    dayStart = int(result[1])
    helloTime = int(result[0])
    
    print (helloTime) / 3600 / 24 / 365
    print helloTime
    

    cursor = c.execute("""  SELECT  strftime('%s',start), 
                                    strftime('%s',end)
                            FROM stretch WHERE date(start) == date('now')
                        """)
    timePoints = []
    percentilePoints = []
    cumulative = 0.0
    
    for row in cursor:
        start = int(row[0])
        end = now
        
        percentilePoints.append(100 * cumulative / (start - helloTime))
        
        if row[1] != None:
            end = int(row[1])
            
        cumulative += end - start
    
        timePoints.append((start - dayStart) / secondsPerHour)
        timePoints.append((end - dayStart) / secondsPerHour)
        
        percentilePoints.append(100 * cumulative / (end - helloTime))
        
    
    plt.plot(timePoints, percentilePoints, marker='o', linestyle='-', color='r')
    plt.xlim([0, 24])
    plt.ylim([0, 100])
    #plt.show()
    

# -----------------------------------------------------------

def hello():
    if not check_none("SELECT * FROM waking WHERE day = date('now')"):
        exit("error: hello already exists for today")
        
    c.execute("INSERT INTO waking VALUES (date('now'), time('now'))")
    conn.commit()
        
    print "hello"
    
    
def start():
    if check_none("SELECT * FROM waking WHERE day = date('now')"):
        hello()
    
    if not check_none("SELECT * FROM stretch WHERE end IS NULL"):
        exit("error: already started")
    
    c.execute("INSERT INTO stretch VALUES (NULL, datetime('now'), NULL)")
    conn.commit()
    
    print "started"

    
def end():
    if check_none("SELECT * FROM stretch WHERE end IS NULL"):
        exit("error: not started")
        
    c.execute("UPDATE stretch SET end = datetime('now') WHERE end IS NULL")
    conn.commit()
    
    print "ended"

# -----------------------------------------------------------

if args == "start":
    start()
elif args == "end":
    end()
elif args == "hello":
    hello()
elif args == "show":
    show()
else:    
    exit("unknown command '%s'" % args)